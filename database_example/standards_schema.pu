@startuml standards_schema

!$STANDARDS_SCHEMA = "v2"

!if (%not(%variable_exists("$TABLES")))
    !include ../Tables2.cuml
!endif

!include ../General2.cuml

!if $is_not_defined("$STANDARDS_CHNAGE_TYPES")
    !include ./standards_change_types.iuml
!endif

!if $is_not_defined("$STANDARDS_CHANGES")
    !include ./standards_changes.iuml
!endif

$many(change_types, changes, u)

!if $is_not_defined("$STANDARDS_MATERIAL_TYPES")
    !include ./standards_material_types.iuml
!endif

!if $is_not_defined("$STANDARDS_MATERIALS")
    !include ./standards_materials.iuml
!endif

$many(material_types, materials, l)

!if $is_not_defined("$STANDARDS_PARTS")
    !include ./standards_parts.iuml
!endif

$many(materials, parts, d)

!if $is_not_defined("$STANDARDS_TYPES")
    !include ./standards_types.iuml
!endif

!if $is_not_defined("$STANDARDS_CONSTRUCTIONS")
    !include ./standards_constructions.iuml
!endif

namespace subjects {
    $set_hide()

    !if $is_not_defined("$SUBJECTS_USERS")
        !include ./subjects_users.iuml
    !endif

    users : $comment("companies as users")
    
    $table(operators) {
        $comment("persons")
    }
    
    $many(users, operators)
    
    $unset_hide()
}

!if $is_not_defined("$STANDARDS_SERIALS")
    !include ./standards_serials.iuml
!endif

$many(constructions, parts, u)

$many(changes, serials, u)

$many(types, serials)

$many(constructions, serials)

$many(subjects.users, serials)

$table(interaction_data) {
    $comment("log journal")
}

$many(serials, interaction_data)

$many(subjects.operators, interaction_data)

namespace readers {
    $table(serials) {
    $comment("some external devices")
    }
}

$many(readers.serials, interaction_data, u)

@enduml